@using Microsoft.AspNetCore.SignalR.Client
@using HeistBox.Data
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Player</PageTitle>
@if(joined == false)
{
    <div class="form-group">
        <label>
            User:
            <input @bind="userInput" />
        </label>
    </div>
    <div class="form-group">
        <label>
            Game id:
            <input @bind="gameId" size="4" />
        </label>
    </div>
    <button @onclick="Join" disabled="@(!IsConnected)">Join</button>
}
else
{
    <p>Wait for host to start the heist</p>
}




@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? userInput;
    private string? gameId;
    private bool joined = false;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/gamehub"))
            .Build();

        hubConnection.On<GameData>("PlayerJoined", (game) =>
        {
            if (game.id == gameId.ToLower().Trim() && game.players.Any(p => p.Name == userInput))
            {
                joined = true;
                StateHasChanged();
            }
        });

        await hubConnection.StartAsync();
    }

    private async Task Join()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("JoinGame", userInput, gameId);
        }
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}